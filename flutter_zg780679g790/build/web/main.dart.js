// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const form = flutter_sdk.src__widgets__form;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const scaffold = flutter_sdk.src__material__scaffold;
  const basic = flutter_sdk.src__widgets__basic;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const container = flutter_sdk.src__widgets__container;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const flex = flutter_sdk.src__rendering__flex;
  const image = flutter_sdk.src__widgets__image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const text_button = flutter_sdk.src__material__text_button;
  const bottom_navigation_bar = flutter_sdk.src__material__bottom_navigation_bar;
  const colors = flutter_sdk.src__material__colors;
  const bottom_navigation_bar_item = flutter_sdk.src__widgets__bottom_navigation_bar_item;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const text_input = flutter_sdk.src__services__text_input;
  const app_bar = flutter_sdk.src__material__app_bar;
  const alignment = flutter_sdk.src__painting__alignment;
  const tab_controller = flutter_sdk.src__material__tab_controller;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const borders = flutter_sdk.src__painting__borders;
  const tabs = flutter_sdk.src__material__tabs;
  const recognizer = flutter_sdk.src__gestures__recognizer;
  const colors$ = flutter_sdk.src__painting__colors;
  const card = flutter_sdk.src__material__card;
  const icons = flutter_sdk.src__material__icons;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const expansion_tile = flutter_sdk.src__material__expansion_tile;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var login_page = Object.create(dart.library);
  var login_design = Object.create(dart.library);
  var signup_page = Object.create(dart.library);
  var main_page = Object.create(dart.library);
  var signup_design = Object.create(dart.library);
  var relatorio_page = Object.create(dart.library);
  var home_page = Object.create(dart.library);
  var analise_page = Object.create(dart.library);
  var perfil_page = Object.create(dart.library);
  var home_design = Object.create(dart.library);
  var analise_design = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isEmpty = dartx.isEmpty;
  var $_get = dartx._get;
  var $length = dartx.length;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    BuildContextToMainPage: () => (T.BuildContextToMainPage = dart.constFn(dart.fnType(main_page.MainPage, [framework.BuildContext])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    BuildContextToSignUpPage: () => (T.BuildContextToSignUpPage = dart.constFn(dart.fnType(signup_page.SignUpPage, [framework.BuildContext])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToLoginPage: () => (T.BuildContextToLoginPage = dart.constFn(dart.fnType(login_page.LoginPage, [framework.BuildContext])))(),
    BuildContextAndintToExpansionTile: () => (T.BuildContextAndintToExpansionTile = dart.constFn(dart.fnType(expansion_tile.ExpansionTile, [framework.BuildContext, core.int])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: login_page.LoginPage.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: main_page.MainPage.prototype,
        [Widget_key]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281238941
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 100,
        [EdgeInsets_right]: 100,
        [EdgeInsets_top]: 100,
        [EdgeInsets_left]: 100
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 30,
        [EdgeInsets_right]: 30,
        [EdgeInsets_top]: 30,
        [EdgeInsets_left]: 30
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293917692
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_Enum__name]: "center",
        [_Enum_index]: 2
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 32,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: C[10] || CT.C10,
        [Text_strutStyle]: null,
        [Text_style]: C[11] || CT.C11,
        [Text_textSpan]: null,
        [Text_data]: "Sign In"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 30,
        [SizedBox_width]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Email",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 15,
        [SizedBox_width]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Senha",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 48,
        [OffsetBase__dx]: 1 / 0
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[19] || CT.C19,
        [Text_textSpan]: null,
        [Text_data]: "LOG IN"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 12,
        [SizedBox_width]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3707764736
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[23] || CT.C23,
        [TextStyle_inherit]: true
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[22] || CT.C22,
        [Text_textSpan]: null,
        [Text_data]: "Não tem uma conta?"
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: signup_page.SignUpPage.prototype,
        [Widget_key]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.TextDecoration.prototype,
        [TextDecoration__mask]: 1
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292962590
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: C[27] || CT.C27,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 15,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[28] || CT.C28,
        [TextStyle_inherit]: true
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[26] || CT.C26,
        [Text_textSpan]: null,
        [Text_data]: " SIGN UP"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280109924
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58136
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[33] || CT.C33
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Home",
        [BottomNavigationBarItem_activeIcon]: C[32] || CT.C32,
        [BottomNavigationBarItem_icon]: C[32] || CT.C32
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57475
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[36] || CT.C36
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Análise",
        [BottomNavigationBarItem_activeIcon]: C[35] || CT.C35,
        [BottomNavigationBarItem_icon]: C[35] || CT.C35
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57548
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[39] || CT.C39
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Relatório",
        [BottomNavigationBarItem_activeIcon]: C[38] || CT.C38,
        [BottomNavigationBarItem_icon]: C[38] || CT.C38
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58513
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[42] || CT.C42
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Perfil",
        [BottomNavigationBarItem_activeIcon]: C[41] || CT.C41,
        [BottomNavigationBarItem_icon]: C[41] || CT.C41
      });
    },
    get C30() {
      return C[30] = dart.constList([C[31] || CT.C31, C[34] || CT.C34, C[37] || CT.C37, C[40] || CT.C40], bottom_navigation_bar_item.BottomNavigationBarItem);
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 50,
        [EdgeInsets_right]: 50,
        [EdgeInsets_top]: 50,
        [EdgeInsets_left]: 50
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 4,
        [OffsetBase__dx]: 0
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1107296256
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.BlurStyle.prototype,
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 8,
        [Shadow_offset]: C[48] || CT.C48,
        [Shadow_color]: C[49] || CT.C49,
        [BoxShadow_blurStyle]: C[50] || CT.C50,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C46() {
      return C[46] = dart.constList([C[47] || CT.C47], box_shadow.BoxShadow);
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[11] || CT.C11,
        [Text_textSpan]: null,
        [Text_data]: "Sign Up"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Nome Completo",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Confirme seu Email",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: "Mínimo 8 caracteres, 1 maiúscula, 1 símbolo !@",
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Senha",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Nome da Empresa",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Mesas de 2 lugares",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Mesas de 4 lugares",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Mesas de 8 lugares",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "SIGN UP"
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[22] || CT.C22,
        [Text_textSpan]: null,
        [Text_data]: "Já tem conta? "
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[26] || CT.C26,
        [Text_textSpan]: null,
        [Text_data]: "LOG IN"
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Relatório"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[67] || CT.C67,
        [Text_textSpan]: null,
        [Text_data]: "Página de Relatório"
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[66] || CT.C66,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[68] || CT.C68
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: home_design.HomeDesign.prototype,
        [Widget_key]: null,
        [HomeDesign_logoAppBarPath]: "logo.png",
        [HomeDesign_logoPath]: "logo.png",
        [HomeDesign_iconColor]: C[28] || CT.C28,
        [HomeDesign_appBarColor]: C[4] || CT.C4
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "none",
        [_Enum_index]: 0
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[72] || CT.C72,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[73] || CT.C73
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 20,
        [Radius_x]: 20
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[75] || CT.C75,
        [BorderRadius_bottomLeft]: C[75] || CT.C75,
        [BorderRadius_topRight]: C[76] || CT.C76,
        [BorderRadius_topLeft]: C[76] || CT.C76
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C[71] || CT.C71,
        [RoundedRectangleBorder_borderRadius]: C[74] || CT.C74
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 22,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[79] || CT.C79,
        [TextStyle_inherit]: true
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[78] || CT.C78,
        [Text_textSpan]: null,
        [Text_data]: "Análise"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_Enum__name]: "start",
        [_Enum_index]: 1
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3019898879
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: tabs.Tab.prototype,
        [Widget_key]: null,
        [Tab_height]: null,
        [Tab_iconMargin]: C[87] || CT.C87,
        [Tab_icon]: null,
        [Tab_child]: null,
        [Tab_text]: "Dia"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: tabs.Tab.prototype,
        [Widget_key]: null,
        [Tab_height]: null,
        [Tab_iconMargin]: C[87] || CT.C87,
        [Tab_icon]: null,
        [Tab_child]: null,
        [Tab_text]: "Semana"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: tabs.Tab.prototype,
        [Widget_key]: null,
        [Tab_height]: null,
        [Tab_iconMargin]: C[87] || CT.C87,
        [Tab_icon]: null,
        [Tab_child]: null,
        [Tab_text]: "Mês"
      });
    },
    get C85() {
      return C[85] = dart.constList([C[86] || CT.C86, C[88] || CT.C88, C[89] || CT.C89], framework.Widget);
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: tabs.TabBar.prototype,
        [Widget_key]: null,
        [TabBar_splashBorderRadius]: null,
        [TabBar_splashFactory]: null,
        [TabBar_physics]: null,
        [TabBar_onTap]: null,
        [TabBar_enableFeedback]: null,
        [TabBar_mouseCursor]: null,
        [TabBar_dragStartBehavior]: C[82] || CT.C82,
        [TabBar_overlayColor]: null,
        [TabBar_unselectedLabelStyle]: null,
        [TabBar_labelPadding]: null,
        [TabBar_labelStyle]: null,
        [TabBar_unselectedLabelColor]: C[83] || CT.C83,
        [TabBar_labelColor]: C[79] || CT.C79,
        [TabBar_dividerColor]: null,
        [TabBar_indicatorSize]: null,
        [TabBar_automaticIndicatorColorAdjustment]: true,
        [TabBar_indicator]: null,
        [TabBar_indicatorPadding]: C[84] || CT.C84,
        [TabBar_indicatorWeight]: 2,
        [TabBar_indicatorColor]: C[79] || CT.C79,
        [TabBar_padding]: null,
        [TabBar_isScrollable]: false,
        [TabBar_controller]: null,
        [TabBar_tabs]: C[85] || CT.C85
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Perfil"
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[67] || CT.C67,
        [Text_textSpan]: null,
        [Text_data]: "Página de Perfil"
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[92] || CT.C92,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[68] || CT.C68
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C94() {
      return C[94] = dart.constMap(core.int, ui.Color, [50, C[95] || CT.C95, 100, C[96] || CT.C96, 200, C[97] || CT.C97, 300, C[98] || CT.C98, 400, C[99] || CT.C99, 500, C[100] || CT.C100, 600, C[101] || CT.C101, 700, C[102] || CT.C102, 800, C[103] || CT.C103, 900, C[104] || CT.C104]);
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[94] || CT.C94
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Home"
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Gráfico de Fluxo de Clientes"
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[108] || CT.C108,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[68] || CT.C68
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 12
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[112] || CT.C112,
        [Text_textSpan]: null,
        [Text_data]: "6/10 Mesas Ocupadas"
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[112] || CT.C112,
        [Text_textSpan]: null,
        [Text_data]: "Mesa 4 está ocupada há 30 min"
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57695
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[116] || CT.C116
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2315255808
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[118] || CT.C118,
        [TextStyle_inherit]: true
      });
    }
  }, false);
  var C = Array(119).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/pages/login_page.dart",
    "package:flutter_app/design/login_design.dart",
    "package:flutter_app/pages/signup_page.dart",
    "package:flutter_app/pages/main_page.dart",
    "package:flutter_app/design/signup_design.dart",
    "package:flutter_app/pages/relatorio_page.dart",
    "package:flutter_app/pages/home_page.dart",
    "package:flutter_app/pages/analise_page.dart",
    "package:flutter_app/pages/perfil_page.dart",
    "package:flutter_app/design/home_design.dart",
    "package:flutter_app/design/analise_design.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, title: "Meu App", home: C[1] || CT.C1});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    binding.runApp(C[2] || CT.C2);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  login_page.LoginPage = class LoginPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new login_page.LoginPage.new({key: key});
    }
    build(context) {
      return new login_design.LoginDesign.new();
    }
  };
  (login_page.LoginPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    login_page.LoginPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = login_page.LoginPage.prototype;
  dart.addTypeTests(login_page.LoginPage);
  dart.addTypeCaches(login_page.LoginPage);
  dart.setMethodSignature(login_page.LoginPage, () => ({
    __proto__: dart.getMethods(login_page.LoginPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login_page.LoginPage, I[1]);
  login_design.LoginDesign = class LoginDesign extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new login_design.LoginDesign.new({key: key});
    }
    createState() {
      return new login_design._LoginDesignState.new();
    }
  };
  (login_design.LoginDesign.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    login_design.LoginDesign.__proto__.new.call(this, {key: key});
    ;
  }).prototype = login_design.LoginDesign.prototype;
  dart.addTypeTests(login_design.LoginDesign);
  dart.addTypeCaches(login_design.LoginDesign);
  dart.setMethodSignature(login_design.LoginDesign, () => ({
    __proto__: dart.getMethods(login_design.LoginDesign.__proto__),
    createState: dart.fnType(login_design._LoginDesignState, [])
  }));
  dart.setLibraryUri(login_design.LoginDesign, I[2]);
  var _formKey = dart.privateName(login_design, "_formKey");
  var _emailController = dart.privateName(login_design, "_emailController");
  var _passwordController = dart.privateName(login_design, "_passwordController");
  var _login = dart.privateName(login_design, "_login");
  var Color_value = dart.privateName(ui, "Color.value");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var InputDecoration_constraints = dart.privateName(input_decorator, "InputDecoration.constraints");
  var InputDecoration_alignLabelWithHint = dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint");
  var InputDecoration_semanticCounterText = dart.privateName(input_decorator, "InputDecoration.semanticCounterText");
  var InputDecoration_enabled = dart.privateName(input_decorator, "InputDecoration.enabled");
  var InputDecoration_border = dart.privateName(input_decorator, "InputDecoration.border");
  var InputDecoration_enabledBorder = dart.privateName(input_decorator, "InputDecoration.enabledBorder");
  var InputDecoration_disabledBorder = dart.privateName(input_decorator, "InputDecoration.disabledBorder");
  var InputDecoration_focusedErrorBorder = dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder");
  var InputDecoration_focusedBorder = dart.privateName(input_decorator, "InputDecoration.focusedBorder");
  var InputDecoration_errorBorder = dart.privateName(input_decorator, "InputDecoration.errorBorder");
  var InputDecoration_hoverColor = dart.privateName(input_decorator, "InputDecoration.hoverColor");
  var InputDecoration_focusColor = dart.privateName(input_decorator, "InputDecoration.focusColor");
  var InputDecoration_fillColor = dart.privateName(input_decorator, "InputDecoration.fillColor");
  var InputDecoration_filled = dart.privateName(input_decorator, "InputDecoration.filled");
  var InputDecoration_counterStyle = dart.privateName(input_decorator, "InputDecoration.counterStyle");
  var InputDecoration_counter = dart.privateName(input_decorator, "InputDecoration.counter");
  var InputDecoration_counterText = dart.privateName(input_decorator, "InputDecoration.counterText");
  var InputDecoration_suffixIconConstraints = dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints");
  var InputDecoration_suffixIconColor = dart.privateName(input_decorator, "InputDecoration.suffixIconColor");
  var InputDecoration_suffixStyle = dart.privateName(input_decorator, "InputDecoration.suffixStyle");
  var InputDecoration_suffixText = dart.privateName(input_decorator, "InputDecoration.suffixText");
  var InputDecoration_suffix = dart.privateName(input_decorator, "InputDecoration.suffix");
  var InputDecoration_suffixIcon = dart.privateName(input_decorator, "InputDecoration.suffixIcon");
  var InputDecoration_prefixIconColor = dart.privateName(input_decorator, "InputDecoration.prefixIconColor");
  var InputDecoration_prefixStyle = dart.privateName(input_decorator, "InputDecoration.prefixStyle");
  var InputDecoration_prefixText = dart.privateName(input_decorator, "InputDecoration.prefixText");
  var InputDecoration_prefix = dart.privateName(input_decorator, "InputDecoration.prefix");
  var InputDecoration_prefixIconConstraints = dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints");
  var InputDecoration_prefixIcon = dart.privateName(input_decorator, "InputDecoration.prefixIcon");
  var InputDecoration_isCollapsed = dart.privateName(input_decorator, "InputDecoration.isCollapsed");
  var InputDecoration_contentPadding = dart.privateName(input_decorator, "InputDecoration.contentPadding");
  var InputDecoration_isDense = dart.privateName(input_decorator, "InputDecoration.isDense");
  var InputDecoration_floatingLabelAlignment = dart.privateName(input_decorator, "InputDecoration.floatingLabelAlignment");
  var InputDecoration_floatingLabelBehavior = dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior");
  var InputDecoration_errorMaxLines = dart.privateName(input_decorator, "InputDecoration.errorMaxLines");
  var InputDecoration_errorStyle = dart.privateName(input_decorator, "InputDecoration.errorStyle");
  var InputDecoration_errorText = dart.privateName(input_decorator, "InputDecoration.errorText");
  var InputDecoration_hintMaxLines = dart.privateName(input_decorator, "InputDecoration.hintMaxLines");
  var InputDecoration_hintTextDirection = dart.privateName(input_decorator, "InputDecoration.hintTextDirection");
  var InputDecoration_hintStyle = dart.privateName(input_decorator, "InputDecoration.hintStyle");
  var InputDecoration_hintText = dart.privateName(input_decorator, "InputDecoration.hintText");
  var InputDecoration_helperMaxLines = dart.privateName(input_decorator, "InputDecoration.helperMaxLines");
  var InputDecoration_helperStyle = dart.privateName(input_decorator, "InputDecoration.helperStyle");
  var InputDecoration_helperText = dart.privateName(input_decorator, "InputDecoration.helperText");
  var InputDecoration_floatingLabelStyle = dart.privateName(input_decorator, "InputDecoration.floatingLabelStyle");
  var InputDecoration_labelStyle = dart.privateName(input_decorator, "InputDecoration.labelStyle");
  var InputDecoration_labelText = dart.privateName(input_decorator, "InputDecoration.labelText");
  var InputDecoration_label = dart.privateName(input_decorator, "InputDecoration.label");
  var InputDecoration_iconColor = dart.privateName(input_decorator, "InputDecoration.iconColor");
  var InputDecoration_icon = dart.privateName(input_decorator, "InputDecoration.icon");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var TextDecoration__mask = dart.privateName(ui, "TextDecoration._mask");
  login_design._LoginDesignState = class _LoginDesignState extends framework.State$(login_design.LoginDesign) {
    [_login]() {
      if (dart.nullCheck(this[_formKey].currentState).validate()) {
        navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[3] || CT.C3, T.BuildContextToMainPage())}));
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: C[4] || CT.C4, body: new basic.Center.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new container.Container.new({margin: C[5] || CT.C5, padding: C[6] || CT.C6, decoration: new box_decoration.BoxDecoration.new({color: C[7] || CT.C7, borderRadius: new border_radius.BorderRadius.circular(12)}), child: new form.Form.new({key: this[_formKey], child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new basic.Center.new({child: new image.Image.asset("logoazul1.png", {height: 200, fit: box_fit.BoxFit.contain})}), C[8] || CT.C8, C[9] || CT.C9, C[13] || CT.C13, new text_form_field.TextFormField.new({controller: this[_emailController], decoration: C[14] || CT.C14, validator: dart.fn(value => {
                        if (value == null || value[$isEmpty]) {
                          return "Email obrigatório";
                        }
                        return null;
                      }, T.StringNToStringN())}), C[15] || CT.C15, new text_form_field.TextFormField.new({controller: this[_passwordController], obscureText: true, decoration: C[16] || CT.C16, validator: dart.fn(value => {
                        if (value == null || value.length < 8) {
                          return "Senha precisa ter no mínimo 8 caracteres";
                        }
                        return null;
                      }, T.StringNToStringN())}), C[13] || CT.C13, new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: new ui.Color.fromRGBO(29, 75, 100, 1), minimumSize: C[17] || CT.C17}), onPressed: dart.bind(this, _login), child: C[18] || CT.C18}), C[20] || CT.C20, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([C[21] || CT.C21, new text_button.TextButton.new({onPressed: dart.fn(() => {
                            navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[24] || CT.C24, T.BuildContextToSignUpPage())}));
                          }, T.VoidTovoid()), child: C[25] || CT.C25})])})])})})})})})});
    }
    static ['_#new#tearOff']() {
      return new login_design._LoginDesignState.new();
    }
  };
  (login_design._LoginDesignState.new = function() {
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this[_emailController] = new editable_text.TextEditingController.new();
    this[_passwordController] = new editable_text.TextEditingController.new();
    login_design._LoginDesignState.__proto__.new.call(this);
    ;
  }).prototype = login_design._LoginDesignState.prototype;
  dart.addTypeTests(login_design._LoginDesignState);
  dart.addTypeCaches(login_design._LoginDesignState);
  dart.setMethodSignature(login_design._LoginDesignState, () => ({
    __proto__: dart.getMethods(login_design._LoginDesignState.__proto__),
    [_login]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login_design._LoginDesignState, I[2]);
  dart.setFieldSignature(login_design._LoginDesignState, () => ({
    __proto__: dart.getFields(login_design._LoginDesignState.__proto__),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_emailController]: dart.finalFieldType(editable_text.TextEditingController),
    [_passwordController]: dart.finalFieldType(editable_text.TextEditingController)
  }));
  signup_page.SignUpPage = class SignUpPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new signup_page.SignUpPage.new({key: key});
    }
    createState() {
      return new signup_page._SignUpPageState.new();
    }
  };
  (signup_page.SignUpPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    signup_page.SignUpPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = signup_page.SignUpPage.prototype;
  dart.addTypeTests(signup_page.SignUpPage);
  dart.addTypeCaches(signup_page.SignUpPage);
  dart.setMethodSignature(signup_page.SignUpPage, () => ({
    __proto__: dart.getMethods(signup_page.SignUpPage.__proto__),
    createState: dart.fnType(framework.State$(signup_page.SignUpPage), [])
  }));
  dart.setLibraryUri(signup_page.SignUpPage, I[3]);
  var _formKey$ = dart.privateName(signup_page, "_formKey");
  var _nameController = dart.privateName(signup_page, "_nameController");
  var _emailController$ = dart.privateName(signup_page, "_emailController");
  var _confirmEmailController = dart.privateName(signup_page, "_confirmEmailController");
  var _passwordController$ = dart.privateName(signup_page, "_passwordController");
  var _companyController = dart.privateName(signup_page, "_companyController");
  var _tables2Controller = dart.privateName(signup_page, "_tables2Controller");
  var _tables4Controller = dart.privateName(signup_page, "_tables4Controller");
  var _tables8Controller = dart.privateName(signup_page, "_tables8Controller");
  var _signup = dart.privateName(signup_page, "_signup");
  var _passwordValidator = dart.privateName(signup_page, "_passwordValidator");
  var _emailValidator = dart.privateName(signup_page, "_emailValidator");
  var _confirmEmailValidator = dart.privateName(signup_page, "_confirmEmailValidator");
  var _numberValidator = dart.privateName(signup_page, "_numberValidator");
  signup_page._SignUpPageState = class _SignUpPageState extends framework.State$(signup_page.SignUpPage) {
    [_signup]() {
      if (dart.nullCheck(this[_formKey$].currentState).validate()) {
        navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(_ => C[3] || CT.C3, T.BuildContextToMainPage())}));
      }
    }
    [_passwordValidator](value) {
      if (value == null || value[$isEmpty]) return "Senha obrigatória";
      if (value.length < 8) return "Senha deve ter pelo menos 8 caracteres";
      if (!core.RegExp.new("[A-Z]").hasMatch(value)) return "Deve conter ao menos uma letra maiúscula";
      if (!core.RegExp.new("[!@]").hasMatch(value)) return "Deve conter ao menos um símbolo !@";
      return null;
    }
    [_emailValidator](value) {
      if (value == null || value[$isEmpty]) return "Email obrigatório";
      return null;
    }
    [_confirmEmailValidator](value) {
      if (value == null || value[$isEmpty]) return "Confirmação obrigatória";
      if (value !== this[_emailController$].text) return "Emails não conferem";
      return null;
    }
    [_numberValidator](value) {
      if (value == null || value[$isEmpty]) return "Preencha este campo";
      if (core.int.tryParse(value) == null) return "Digite um número válido";
      return null;
    }
    build(context) {
      return new signup_design.SignUpDesign.new({formKey: this[_formKey$], nameController: this[_nameController], emailController: this[_emailController$], confirmEmailController: this[_confirmEmailController], passwordController: this[_passwordController$], companyController: this[_companyController], tables2Controller: this[_tables2Controller], tables4Controller: this[_tables4Controller], tables8Controller: this[_tables8Controller], onSubmit: dart.bind(this, _signup), passwordValidator: dart.bind(this, _passwordValidator), emailValidator: dart.bind(this, _emailValidator), confirmEmailValidator: dart.bind(this, _confirmEmailValidator), numberValidator: dart.bind(this, _numberValidator), onLoginTap: dart.fn(() => {
        }, T.VoidTovoid())});
    }
    static ['_#new#tearOff']() {
      return new signup_page._SignUpPageState.new();
    }
  };
  (signup_page._SignUpPageState.new = function() {
    this[_formKey$] = T.GlobalKeyOfFormState().new();
    this[_nameController] = new editable_text.TextEditingController.new();
    this[_emailController$] = new editable_text.TextEditingController.new();
    this[_confirmEmailController] = new editable_text.TextEditingController.new();
    this[_passwordController$] = new editable_text.TextEditingController.new();
    this[_companyController] = new editable_text.TextEditingController.new();
    this[_tables2Controller] = new editable_text.TextEditingController.new();
    this[_tables4Controller] = new editable_text.TextEditingController.new();
    this[_tables8Controller] = new editable_text.TextEditingController.new();
    signup_page._SignUpPageState.__proto__.new.call(this);
    ;
  }).prototype = signup_page._SignUpPageState.prototype;
  dart.addTypeTests(signup_page._SignUpPageState);
  dart.addTypeCaches(signup_page._SignUpPageState);
  dart.setMethodSignature(signup_page._SignUpPageState, () => ({
    __proto__: dart.getMethods(signup_page._SignUpPageState.__proto__),
    [_signup]: dart.fnType(dart.void, []),
    [_passwordValidator]: dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]),
    [_emailValidator]: dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]),
    [_confirmEmailValidator]: dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]),
    [_numberValidator]: dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signup_page._SignUpPageState, I[3]);
  dart.setFieldSignature(signup_page._SignUpPageState, () => ({
    __proto__: dart.getFields(signup_page._SignUpPageState.__proto__),
    [_formKey$]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_nameController]: dart.finalFieldType(editable_text.TextEditingController),
    [_emailController$]: dart.finalFieldType(editable_text.TextEditingController),
    [_confirmEmailController]: dart.finalFieldType(editable_text.TextEditingController),
    [_passwordController$]: dart.finalFieldType(editable_text.TextEditingController),
    [_companyController]: dart.finalFieldType(editable_text.TextEditingController),
    [_tables2Controller]: dart.finalFieldType(editable_text.TextEditingController),
    [_tables4Controller]: dart.finalFieldType(editable_text.TextEditingController),
    [_tables8Controller]: dart.finalFieldType(editable_text.TextEditingController)
  }));
  main_page.MainPage = class MainPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main_page.MainPage.new({key: key});
    }
    createState() {
      return new main_page._MainPageState.new();
    }
  };
  (main_page.MainPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main_page.MainPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main_page.MainPage.prototype;
  dart.addTypeTests(main_page.MainPage);
  dart.addTypeCaches(main_page.MainPage);
  dart.setMethodSignature(main_page.MainPage, () => ({
    __proto__: dart.getMethods(main_page.MainPage.__proto__),
    createState: dart.fnType(framework.State$(main_page.MainPage), [])
  }));
  dart.setLibraryUri(main_page.MainPage, I[4]);
  var _selectedIndex = dart.privateName(main_page, "_selectedIndex");
  var _pages = dart.privateName(main_page, "_pages");
  var _onItemTapped = dart.privateName(main_page, "_onItemTapped");
  var BottomNavigationBarItem_tooltip = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.tooltip");
  var BottomNavigationBarItem_backgroundColor = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.backgroundColor");
  var BottomNavigationBarItem_label = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.label");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var BottomNavigationBarItem_activeIcon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.activeIcon");
  var BottomNavigationBarItem_icon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.icon");
  main_page._MainPageState = class _MainPageState extends framework.State$(main_page.MainPage) {
    get [_pages]() {
      return T.JSArrayOfWidget().of([new home_page.HomePage.new(), new analise_page.AnalisePage.new(), new relatorio_page.RelatorioPage.new(), new perfil_page.PerfilPage.new()]);
    }
    [_onItemTapped](index) {
      this.setState(dart.fn(() => {
        this[_selectedIndex] = index;
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({body: this[_pages][$_get](this[_selectedIndex]), bottomNavigationBar: new bottom_navigation_bar.BottomNavigationBar.new({currentIndex: this[_selectedIndex], onTap: dart.bind(this, _onItemTapped), type: bottom_navigation_bar.BottomNavigationBarType.fixed, selectedItemColor: C[29] || CT.C29, unselectedItemColor: colors.Colors.grey, items: C[30] || CT.C30})});
    }
    static ['_#new#tearOff']() {
      return new main_page._MainPageState.new();
    }
  };
  (main_page._MainPageState.new = function() {
    this[_selectedIndex] = 0;
    main_page._MainPageState.__proto__.new.call(this);
    ;
  }).prototype = main_page._MainPageState.prototype;
  dart.addTypeTests(main_page._MainPageState);
  dart.addTypeCaches(main_page._MainPageState);
  dart.setMethodSignature(main_page._MainPageState, () => ({
    __proto__: dart.getMethods(main_page._MainPageState.__proto__),
    [_onItemTapped]: dart.fnType(dart.void, [core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(main_page._MainPageState, () => ({
    __proto__: dart.getGetters(main_page._MainPageState.__proto__),
    [_pages]: core.List$(framework.Widget)
  }));
  dart.setLibraryUri(main_page._MainPageState, I[4]);
  dart.setFieldSignature(main_page._MainPageState, () => ({
    __proto__: dart.getFields(main_page._MainPageState.__proto__),
    [_selectedIndex]: dart.fieldType(core.int)
  }));
  var formKey$ = dart.privateName(signup_design, "SignUpDesign.formKey");
  var nameController$ = dart.privateName(signup_design, "SignUpDesign.nameController");
  var emailController$ = dart.privateName(signup_design, "SignUpDesign.emailController");
  var confirmEmailController$ = dart.privateName(signup_design, "SignUpDesign.confirmEmailController");
  var passwordController$ = dart.privateName(signup_design, "SignUpDesign.passwordController");
  var companyController$ = dart.privateName(signup_design, "SignUpDesign.companyController");
  var tables2Controller$ = dart.privateName(signup_design, "SignUpDesign.tables2Controller");
  var tables4Controller$ = dart.privateName(signup_design, "SignUpDesign.tables4Controller");
  var tables8Controller$ = dart.privateName(signup_design, "SignUpDesign.tables8Controller");
  var onSubmit$ = dart.privateName(signup_design, "SignUpDesign.onSubmit");
  var onLoginTap$ = dart.privateName(signup_design, "SignUpDesign.onLoginTap");
  var passwordValidator$ = dart.privateName(signup_design, "SignUpDesign.passwordValidator");
  var emailValidator$ = dart.privateName(signup_design, "SignUpDesign.emailValidator");
  var confirmEmailValidator$ = dart.privateName(signup_design, "SignUpDesign.confirmEmailValidator");
  var numberValidator$ = dart.privateName(signup_design, "SignUpDesign.numberValidator");
  var _sectionTitle = dart.privateName(signup_design, "_sectionTitle");
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_blurStyle = dart.privateName(box_shadow, "BoxShadow.blurStyle");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  signup_design.SignUpDesign = class SignUpDesign extends framework.StatelessWidget {
    get formKey() {
      return this[formKey$];
    }
    set formKey(value) {
      super.formKey = value;
    }
    get nameController() {
      return this[nameController$];
    }
    set nameController(value) {
      super.nameController = value;
    }
    get emailController() {
      return this[emailController$];
    }
    set emailController(value) {
      super.emailController = value;
    }
    get confirmEmailController() {
      return this[confirmEmailController$];
    }
    set confirmEmailController(value) {
      super.confirmEmailController = value;
    }
    get passwordController() {
      return this[passwordController$];
    }
    set passwordController(value) {
      super.passwordController = value;
    }
    get companyController() {
      return this[companyController$];
    }
    set companyController(value) {
      super.companyController = value;
    }
    get tables2Controller() {
      return this[tables2Controller$];
    }
    set tables2Controller(value) {
      super.tables2Controller = value;
    }
    get tables4Controller() {
      return this[tables4Controller$];
    }
    set tables4Controller(value) {
      super.tables4Controller = value;
    }
    get tables8Controller() {
      return this[tables8Controller$];
    }
    set tables8Controller(value) {
      super.tables8Controller = value;
    }
    get onSubmit() {
      return this[onSubmit$];
    }
    set onSubmit(value) {
      super.onSubmit = value;
    }
    get onLoginTap() {
      return this[onLoginTap$];
    }
    set onLoginTap(value) {
      super.onLoginTap = value;
    }
    get passwordValidator() {
      return this[passwordValidator$];
    }
    set passwordValidator(value) {
      super.passwordValidator = value;
    }
    get emailValidator() {
      return this[emailValidator$];
    }
    set emailValidator(value) {
      super.emailValidator = value;
    }
    get confirmEmailValidator() {
      return this[confirmEmailValidator$];
    }
    set confirmEmailValidator(value) {
      super.confirmEmailValidator = value;
    }
    get numberValidator() {
      return this[numberValidator$];
    }
    set numberValidator(value) {
      super.numberValidator = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let formKey = opts && 'formKey' in opts ? opts.formKey : null;
      let nameController = opts && 'nameController' in opts ? opts.nameController : null;
      let emailController = opts && 'emailController' in opts ? opts.emailController : null;
      let confirmEmailController = opts && 'confirmEmailController' in opts ? opts.confirmEmailController : null;
      let passwordController = opts && 'passwordController' in opts ? opts.passwordController : null;
      let companyController = opts && 'companyController' in opts ? opts.companyController : null;
      let tables2Controller = opts && 'tables2Controller' in opts ? opts.tables2Controller : null;
      let tables4Controller = opts && 'tables4Controller' in opts ? opts.tables4Controller : null;
      let tables8Controller = opts && 'tables8Controller' in opts ? opts.tables8Controller : null;
      let onSubmit = opts && 'onSubmit' in opts ? opts.onSubmit : null;
      let onLoginTap = opts && 'onLoginTap' in opts ? opts.onLoginTap : null;
      let passwordValidator = opts && 'passwordValidator' in opts ? opts.passwordValidator : null;
      let emailValidator = opts && 'emailValidator' in opts ? opts.emailValidator : null;
      let confirmEmailValidator = opts && 'confirmEmailValidator' in opts ? opts.confirmEmailValidator : null;
      let numberValidator = opts && 'numberValidator' in opts ? opts.numberValidator : null;
      return new signup_design.SignUpDesign.new({key: key, formKey: formKey, nameController: nameController, emailController: emailController, confirmEmailController: confirmEmailController, passwordController: passwordController, companyController: companyController, tables2Controller: tables2Controller, tables4Controller: tables4Controller, tables8Controller: tables8Controller, onSubmit: onSubmit, onLoginTap: onLoginTap, passwordValidator: passwordValidator, emailValidator: emailValidator, confirmEmailValidator: confirmEmailValidator, numberValidator: numberValidator});
    }
    [_sectionTitle](title) {
      return new basic.Padding.new({padding: C[43] || CT.C43, child: new text.Text.new(title, {style: C[44] || CT.C44})});
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: C[4] || CT.C4, body: new basic.Center.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new container.Container.new({margin: C[45] || CT.C45, padding: C[6] || CT.C6, decoration: new box_decoration.BoxDecoration.new({color: C[7] || CT.C7, borderRadius: new border_radius.BorderRadius.circular(12), boxShadow: C[46] || CT.C46}), child: new form.Form.new({key: this.formKey, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Center.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([C[51] || CT.C51, new image.Image.asset("logoazul1.png", {height: 200, fit: box_fit.BoxFit.contain}), C[52] || CT.C52])})}), C[51] || CT.C51, this[_sectionTitle]("Informações Pessoais"), new text_form_field.TextFormField.new({controller: this.nameController, decoration: C[53] || CT.C53}), C[54] || CT.C54, new text_form_field.TextFormField.new({controller: this.emailController, decoration: C[14] || CT.C14, validator: this.emailValidator}), C[54] || CT.C54, new text_form_field.TextFormField.new({controller: this.confirmEmailController, decoration: C[55] || CT.C55, validator: this.confirmEmailValidator}), C[54] || CT.C54, new text_form_field.TextFormField.new({controller: this.passwordController, obscureText: true, decoration: C[56] || CT.C56, validator: this.passwordValidator}), C[51] || CT.C51, this[_sectionTitle]("Informações da Empresa"), new text_form_field.TextFormField.new({controller: this.companyController, decoration: C[57] || CT.C57}), C[51] || CT.C51, this[_sectionTitle]("Mesas do Restaurante"), new text_form_field.TextFormField.new({controller: this.tables2Controller, decoration: C[58] || CT.C58, keyboardType: text_input.TextInputType.number, validator: this.numberValidator}), C[54] || CT.C54, new text_form_field.TextFormField.new({controller: this.tables4Controller, decoration: C[59] || CT.C59, keyboardType: text_input.TextInputType.number, validator: this.numberValidator}), C[54] || CT.C54, new text_form_field.TextFormField.new({controller: this.tables8Controller, decoration: C[60] || CT.C60, keyboardType: text_input.TextInputType.number, validator: this.numberValidator}), C[13] || CT.C13, new basic.SizedBox.new({width: 1 / 0, child: new elevated_button.ElevatedButton.new({onPressed: this.onSubmit, style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[29] || CT.C29, minimumSize: C[17] || CT.C17}), child: C[61] || CT.C61})}), C[15] || CT.C15, new basic.Center.new({child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([C[62] || CT.C62, new text_button.TextButton.new({onPressed: dart.fn(() => {
                              navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[1] || CT.C1, T.BuildContextToLoginPage())}));
                            }, T.VoidTovoid()), child: C[63] || CT.C63})])})})])})})})})})});
    }
  };
  (signup_design.SignUpDesign.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let formKey = opts && 'formKey' in opts ? opts.formKey : null;
    let nameController = opts && 'nameController' in opts ? opts.nameController : null;
    let emailController = opts && 'emailController' in opts ? opts.emailController : null;
    let confirmEmailController = opts && 'confirmEmailController' in opts ? opts.confirmEmailController : null;
    let passwordController = opts && 'passwordController' in opts ? opts.passwordController : null;
    let companyController = opts && 'companyController' in opts ? opts.companyController : null;
    let tables2Controller = opts && 'tables2Controller' in opts ? opts.tables2Controller : null;
    let tables4Controller = opts && 'tables4Controller' in opts ? opts.tables4Controller : null;
    let tables8Controller = opts && 'tables8Controller' in opts ? opts.tables8Controller : null;
    let onSubmit = opts && 'onSubmit' in opts ? opts.onSubmit : null;
    let onLoginTap = opts && 'onLoginTap' in opts ? opts.onLoginTap : null;
    let passwordValidator = opts && 'passwordValidator' in opts ? opts.passwordValidator : null;
    let emailValidator = opts && 'emailValidator' in opts ? opts.emailValidator : null;
    let confirmEmailValidator = opts && 'confirmEmailValidator' in opts ? opts.confirmEmailValidator : null;
    let numberValidator = opts && 'numberValidator' in opts ? opts.numberValidator : null;
    this[formKey$] = formKey;
    this[nameController$] = nameController;
    this[emailController$] = emailController;
    this[confirmEmailController$] = confirmEmailController;
    this[passwordController$] = passwordController;
    this[companyController$] = companyController;
    this[tables2Controller$] = tables2Controller;
    this[tables4Controller$] = tables4Controller;
    this[tables8Controller$] = tables8Controller;
    this[onSubmit$] = onSubmit;
    this[onLoginTap$] = onLoginTap;
    this[passwordValidator$] = passwordValidator;
    this[emailValidator$] = emailValidator;
    this[confirmEmailValidator$] = confirmEmailValidator;
    this[numberValidator$] = numberValidator;
    signup_design.SignUpDesign.__proto__.new.call(this, {key: key});
    ;
  }).prototype = signup_design.SignUpDesign.prototype;
  dart.addTypeTests(signup_design.SignUpDesign);
  dart.addTypeCaches(signup_design.SignUpDesign);
  dart.setMethodSignature(signup_design.SignUpDesign, () => ({
    __proto__: dart.getMethods(signup_design.SignUpDesign.__proto__),
    [_sectionTitle]: dart.fnType(framework.Widget, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signup_design.SignUpDesign, I[5]);
  dart.setFieldSignature(signup_design.SignUpDesign, () => ({
    __proto__: dart.getFields(signup_design.SignUpDesign.__proto__),
    formKey: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    nameController: dart.finalFieldType(editable_text.TextEditingController),
    emailController: dart.finalFieldType(editable_text.TextEditingController),
    confirmEmailController: dart.finalFieldType(editable_text.TextEditingController),
    passwordController: dart.finalFieldType(editable_text.TextEditingController),
    companyController: dart.finalFieldType(editable_text.TextEditingController),
    tables2Controller: dart.finalFieldType(editable_text.TextEditingController),
    tables4Controller: dart.finalFieldType(editable_text.TextEditingController),
    tables8Controller: dart.finalFieldType(editable_text.TextEditingController),
    onSubmit: dart.finalFieldType(dart.fnType(dart.void, [])),
    onLoginTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    passwordValidator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]))),
    emailValidator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]))),
    confirmEmailValidator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]))),
    numberValidator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)])))
  }));
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  relatorio_page.RelatorioPage = class RelatorioPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new relatorio_page.RelatorioPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[64] || CT.C64}), body: C[65] || CT.C65});
    }
  };
  (relatorio_page.RelatorioPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    relatorio_page.RelatorioPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = relatorio_page.RelatorioPage.prototype;
  dart.addTypeTests(relatorio_page.RelatorioPage);
  dart.addTypeCaches(relatorio_page.RelatorioPage);
  dart.setMethodSignature(relatorio_page.RelatorioPage, () => ({
    __proto__: dart.getMethods(relatorio_page.RelatorioPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(relatorio_page.RelatorioPage, I[6]);
  var HomeDesign_logoAppBarPath = dart.privateName(home_design, "HomeDesign.logoAppBarPath");
  var HomeDesign_logoPath = dart.privateName(home_design, "HomeDesign.logoPath");
  var HomeDesign_iconColor = dart.privateName(home_design, "HomeDesign.iconColor");
  var HomeDesign_appBarColor = dart.privateName(home_design, "HomeDesign.appBarColor");
  home_page.HomePage = class HomePage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new home_page.HomePage.new({key: key});
    }
    build(context) {
      return C[69] || CT.C69;
    }
  };
  (home_page.HomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    home_page.HomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = home_page.HomePage.prototype;
  dart.addTypeTests(home_page.HomePage);
  dart.addTypeCaches(home_page.HomePage);
  dart.setMethodSignature(home_page.HomePage, () => ({
    __proto__: dart.getMethods(home_page.HomePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(home_page.HomePage, I[7]);
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var OutlinedBorder_side = dart.privateName(borders, "OutlinedBorder.side");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var RoundedRectangleBorder_borderRadius = dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius");
  var TabBar_splashBorderRadius = dart.privateName(tabs, "TabBar.splashBorderRadius");
  var TabBar_splashFactory = dart.privateName(tabs, "TabBar.splashFactory");
  var TabBar_physics = dart.privateName(tabs, "TabBar.physics");
  var TabBar_onTap = dart.privateName(tabs, "TabBar.onTap");
  var TabBar_enableFeedback = dart.privateName(tabs, "TabBar.enableFeedback");
  var TabBar_mouseCursor = dart.privateName(tabs, "TabBar.mouseCursor");
  var TabBar_dragStartBehavior = dart.privateName(tabs, "TabBar.dragStartBehavior");
  var TabBar_overlayColor = dart.privateName(tabs, "TabBar.overlayColor");
  var TabBar_unselectedLabelStyle = dart.privateName(tabs, "TabBar.unselectedLabelStyle");
  var TabBar_labelPadding = dart.privateName(tabs, "TabBar.labelPadding");
  var TabBar_labelStyle = dart.privateName(tabs, "TabBar.labelStyle");
  var TabBar_unselectedLabelColor = dart.privateName(tabs, "TabBar.unselectedLabelColor");
  var TabBar_labelColor = dart.privateName(tabs, "TabBar.labelColor");
  var TabBar_dividerColor = dart.privateName(tabs, "TabBar.dividerColor");
  var TabBar_indicatorSize = dart.privateName(tabs, "TabBar.indicatorSize");
  var TabBar_automaticIndicatorColorAdjustment = dart.privateName(tabs, "TabBar.automaticIndicatorColorAdjustment");
  var TabBar_indicator = dart.privateName(tabs, "TabBar.indicator");
  var TabBar_indicatorPadding = dart.privateName(tabs, "TabBar.indicatorPadding");
  var TabBar_indicatorWeight = dart.privateName(tabs, "TabBar.indicatorWeight");
  var TabBar_indicatorColor = dart.privateName(tabs, "TabBar.indicatorColor");
  var TabBar_padding = dart.privateName(tabs, "TabBar.padding");
  var TabBar_isScrollable = dart.privateName(tabs, "TabBar.isScrollable");
  var TabBar_controller = dart.privateName(tabs, "TabBar.controller");
  var Tab_height = dart.privateName(tabs, "Tab.height");
  var Tab_iconMargin = dart.privateName(tabs, "Tab.iconMargin");
  var Tab_icon = dart.privateName(tabs, "Tab.icon");
  var Tab_child = dart.privateName(tabs, "Tab.child");
  var Tab_text = dart.privateName(tabs, "Tab.text");
  var TabBar_tabs = dart.privateName(tabs, "TabBar.tabs");
  var _buildAnalise = dart.privateName(analise_page, "_buildAnalise");
  analise_page.AnalisePage = class AnalisePage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new analise_page.AnalisePage.new({key: key});
    }
    build(context) {
      return new tab_controller.DefaultTabController.new({length: 3, child: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: C[4] || CT.C4, elevation: 5, shape: C[70] || CT.C70, title: C[77] || CT.C77, actions: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[80] || CT.C80, child: new image.Image.asset("logo.png", {height: 40})})]), bottom: C[81] || CT.C81}), body: new tabs.TabBarView.new({children: T.JSArrayOfWidget().of([this.buildBuildBuildAnalise(), this[_buildAnalise]("Semana", 120, 240, T.JSArrayOfString().of(["Manhã", "Tarde", "Noite"])), this[_buildAnalise]("Mês", 450, 900, T.JSArrayOfString().of(["Manhã", "Tarde", "Noite"]))])})})});
    }
    buildBuildBuildAnalise() {
      return this.buildBuildAnalise();
    }
    buildBuildAnalise() {
      return this[_buildAnalise]("Dia", 30, 96, T.JSArrayOfString().of(["Manhã", "Tarde", "Noite"]));
    }
    [_buildAnalise](label, clientes, mesa, testes) {
      return new analise_design.AnaliseDesign.new({label: label, numberOfClients: clientes, mostUsedTable: mesa, testsList: testes, logoPath: "logoazul1.png", logoAppBarPath: "logoazul1.png"});
    }
  };
  (analise_page.AnalisePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    analise_page.AnalisePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = analise_page.AnalisePage.prototype;
  dart.addTypeTests(analise_page.AnalisePage);
  dart.addTypeCaches(analise_page.AnalisePage);
  dart.setMethodSignature(analise_page.AnalisePage, () => ({
    __proto__: dart.getMethods(analise_page.AnalisePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    buildBuildBuildAnalise: dart.fnType(analise_design.AnaliseDesign, []),
    buildBuildAnalise: dart.fnType(analise_design.AnaliseDesign, []),
    [_buildAnalise]: dart.fnType(analise_design.AnaliseDesign, [core.String, core.int, core.int, core.List$(core.String)])
  }));
  dart.setLibraryUri(analise_page.AnalisePage, I[8]);
  perfil_page.PerfilPage = class PerfilPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new perfil_page.PerfilPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[90] || CT.C90}), body: C[91] || CT.C91});
    }
  };
  (perfil_page.PerfilPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    perfil_page.PerfilPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = perfil_page.PerfilPage.prototype;
  dart.addTypeTests(perfil_page.PerfilPage);
  dart.addTypeCaches(perfil_page.PerfilPage);
  dart.setMethodSignature(perfil_page.PerfilPage, () => ({
    __proto__: dart.getMethods(perfil_page.PerfilPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(perfil_page.PerfilPage, I[9]);
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  const appBarColor$ = HomeDesign_appBarColor;
  const iconColor$ = HomeDesign_iconColor;
  const logoPath$ = HomeDesign_logoPath;
  const logoAppBarPath$ = HomeDesign_logoAppBarPath;
  home_design.HomeDesign = class HomeDesign extends framework.StatelessWidget {
    get appBarColor() {
      return this[appBarColor$];
    }
    set appBarColor(value) {
      super.appBarColor = value;
    }
    get iconColor() {
      return this[iconColor$];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get logoPath() {
      return this[logoPath$];
    }
    set logoPath(value) {
      super.logoPath = value;
    }
    get logoAppBarPath() {
      return this[logoAppBarPath$];
    }
    set logoAppBarPath(value) {
      super.logoAppBarPath = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let appBarColor = opts && 'appBarColor' in opts ? opts.appBarColor : C[4] || CT.C4;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : C[93] || CT.C93;
      let logoPath = opts && 'logoPath' in opts ? opts.logoPath : "logo.png";
      let logoAppBarPath = opts && 'logoAppBarPath' in opts ? opts.logoAppBarPath : "logo.png";
      return new home_design.HomeDesign.new({key: key, appBarColor: appBarColor, iconColor: iconColor, logoPath: logoPath, logoAppBarPath: logoAppBarPath});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[105] || CT.C105, backgroundColor: this.appBarColor, actions: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[80] || CT.C80, child: new image.Image.asset(this.logoAppBarPath, {height: 50, fit: box_fit.BoxFit.contain})})])}), body: new basic.Padding.new({padding: C[106] || CT.C106, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new container.Container.new({color: colors.Colors.grey._get(200), child: C[107] || CT.C107})}), C[51] || CT.C51, new card.Card.new({child: new basic.SizedBox.new({width: 1 / 0, height: 80, child: new basic.Padding.new({padding: C[109] || CT.C109, child: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.event_seat, {size: 40, color: this.iconColor}), C[110] || CT.C110, C[111] || CT.C111])})})})}), C[54] || CT.C54, new card.Card.new({child: new basic.SizedBox.new({width: 1 / 0, height: 80, child: new basic.Padding.new({padding: C[109] || CT.C109, child: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.timer, {size: 40, color: this.iconColor}), C[110] || CT.C110, C[113] || CT.C113])})})})})])})})});
    }
  };
  (home_design.HomeDesign.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let appBarColor = opts && 'appBarColor' in opts ? opts.appBarColor : C[4] || CT.C4;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : C[93] || CT.C93;
    let logoPath = opts && 'logoPath' in opts ? opts.logoPath : "logo.png";
    let logoAppBarPath = opts && 'logoAppBarPath' in opts ? opts.logoAppBarPath : "logo.png";
    this[appBarColor$] = appBarColor;
    this[iconColor$] = iconColor;
    this[logoPath$] = logoPath;
    this[logoAppBarPath$] = logoAppBarPath;
    home_design.HomeDesign.__proto__.new.call(this, {key: key});
    ;
  }).prototype = home_design.HomeDesign.prototype;
  dart.addTypeTests(home_design.HomeDesign);
  dart.addTypeCaches(home_design.HomeDesign);
  dart.setMethodSignature(home_design.HomeDesign, () => ({
    __proto__: dart.getMethods(home_design.HomeDesign.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(home_design.HomeDesign, I[10]);
  dart.setFieldSignature(home_design.HomeDesign, () => ({
    __proto__: dart.getFields(home_design.HomeDesign.__proto__),
    appBarColor: dart.finalFieldType(ui.Color),
    iconColor: dart.finalFieldType(ui.Color),
    logoPath: dart.finalFieldType(core.String),
    logoAppBarPath: dart.finalFieldType(core.String)
  }));
  var label$ = dart.privateName(analise_design, "AnaliseDesign.label");
  var numberOfClients$ = dart.privateName(analise_design, "AnaliseDesign.numberOfClients");
  var mostUsedTable$ = dart.privateName(analise_design, "AnaliseDesign.mostUsedTable");
  var testsList$ = dart.privateName(analise_design, "AnaliseDesign.testsList");
  var appBarColor$0 = dart.privateName(analise_design, "AnaliseDesign.appBarColor");
  var logoPath$0 = dart.privateName(analise_design, "AnaliseDesign.logoPath");
  var logoAppBarPath$0 = dart.privateName(analise_design, "AnaliseDesign.logoAppBarPath");
  var cardHeight$ = dart.privateName(analise_design, "AnaliseDesign.cardHeight");
  var cardWidthClientes$ = dart.privateName(analise_design, "AnaliseDesign.cardWidthClientes");
  var cardWidthMesa$ = dart.privateName(analise_design, "AnaliseDesign.cardWidthMesa");
  var titleFontSize$ = dart.privateName(analise_design, "AnaliseDesign.titleFontSize");
  var valueFontSize$ = dart.privateName(analise_design, "AnaliseDesign.valueFontSize");
  analise_design.AnaliseDesign = class AnaliseDesign extends framework.StatelessWidget {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get numberOfClients() {
      return this[numberOfClients$];
    }
    set numberOfClients(value) {
      super.numberOfClients = value;
    }
    get mostUsedTable() {
      return this[mostUsedTable$];
    }
    set mostUsedTable(value) {
      super.mostUsedTable = value;
    }
    get testsList() {
      return this[testsList$];
    }
    set testsList(value) {
      super.testsList = value;
    }
    get appBarColor() {
      return this[appBarColor$0];
    }
    set appBarColor(value) {
      super.appBarColor = value;
    }
    get logoPath() {
      return this[logoPath$0];
    }
    set logoPath(value) {
      super.logoPath = value;
    }
    get logoAppBarPath() {
      return this[logoAppBarPath$0];
    }
    set logoAppBarPath(value) {
      super.logoAppBarPath = value;
    }
    get cardHeight() {
      return this[cardHeight$];
    }
    set cardHeight(value) {
      super.cardHeight = value;
    }
    get cardWidthClientes() {
      return this[cardWidthClientes$];
    }
    set cardWidthClientes(value) {
      super.cardWidthClientes = value;
    }
    get cardWidthMesa() {
      return this[cardWidthMesa$];
    }
    set cardWidthMesa(value) {
      super.cardWidthMesa = value;
    }
    get titleFontSize() {
      return this[titleFontSize$];
    }
    set titleFontSize(value) {
      super.titleFontSize = value;
    }
    get valueFontSize() {
      return this[valueFontSize$];
    }
    set valueFontSize(value) {
      super.valueFontSize = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let numberOfClients = opts && 'numberOfClients' in opts ? opts.numberOfClients : null;
      let mostUsedTable = opts && 'mostUsedTable' in opts ? opts.mostUsedTable : null;
      let testsList = opts && 'testsList' in opts ? opts.testsList : null;
      let appBarColor = opts && 'appBarColor' in opts ? opts.appBarColor : C[29] || CT.C29;
      let cardHeight = opts && 'cardHeight' in opts ? opts.cardHeight : 100;
      let cardWidthClientes = opts && 'cardWidthClientes' in opts ? opts.cardWidthClientes : 250;
      let cardWidthMesa = opts && 'cardWidthMesa' in opts ? opts.cardWidthMesa : 250;
      let titleFontSize = opts && 'titleFontSize' in opts ? opts.titleFontSize : 16;
      let valueFontSize = opts && 'valueFontSize' in opts ? opts.valueFontSize : 20;
      let logoPath = opts && 'logoPath' in opts ? opts.logoPath : "logo.png";
      let logoAppBarPath = opts && 'logoAppBarPath' in opts ? opts.logoAppBarPath : "logo.png";
      return new analise_design.AnaliseDesign.new({key: key, label: label, numberOfClients: numberOfClients, mostUsedTable: mostUsedTable, testsList: testsList, appBarColor: appBarColor, cardHeight: cardHeight, cardWidthClientes: cardWidthClientes, cardWidthMesa: cardWidthMesa, titleFontSize: titleFontSize, valueFontSize: valueFontSize, logoPath: logoPath, logoAppBarPath: logoAppBarPath});
    }
    build(context) {
      return new basic.Padding.new({padding: C[106] || CT.C106, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.SizedBox.new({height: 300, child: new container.Container.new({color: colors.Colors.grey._get(200), child: C[107] || CT.C107})}), C[54] || CT.C54, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.JSArrayOfWidget().of([new basic.SizedBox.new({width: this.cardWidthClientes, height: this.cardHeight, child: new card.Card.new({child: new basic.Padding.new({padding: C[114] || CT.C114, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new("Nº de Clientes", {style: new text_style.TextStyle.new({fontSize: 20, fontWeight: ui.FontWeight.bold})}), new text.Text.new(this.numberOfClients[$toString](), {style: new text_style.TextStyle.new({fontSize: this.valueFontSize})})])})})})}), new basic.SizedBox.new({width: this.cardWidthMesa, height: this.cardHeight, child: new card.Card.new({child: new basic.Padding.new({padding: C[114] || CT.C114, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new("Mesa Mais Usada", {style: new text_style.TextStyle.new({fontSize: this.titleFontSize, fontWeight: ui.FontWeight.bold})}), new text.Text.new(this.mostUsedTable[$toString](), {style: new text_style.TextStyle.new({fontSize: this.valueFontSize})})])})})})})])}), C[51] || CT.C51, new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: this.testsList[$length], itemBuilder: dart.fn((context, index) => new expansion_tile.ExpansionTile.new({title: new text.Text.new(this.testsList[$_get](index)), trailing: C[115] || CT.C115, children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[114] || CT.C114, child: new text.Text.new("Aqui você pode colocar informações detalhadas sobre " + this.testsList[$_get](index), {style: C[117] || CT.C117})})])}), T.BuildContextAndintToExpansionTile())})})])})});
    }
  };
  (analise_design.AnaliseDesign.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let numberOfClients = opts && 'numberOfClients' in opts ? opts.numberOfClients : null;
    let mostUsedTable = opts && 'mostUsedTable' in opts ? opts.mostUsedTable : null;
    let testsList = opts && 'testsList' in opts ? opts.testsList : null;
    let appBarColor = opts && 'appBarColor' in opts ? opts.appBarColor : C[29] || CT.C29;
    let cardHeight = opts && 'cardHeight' in opts ? opts.cardHeight : 100;
    let cardWidthClientes = opts && 'cardWidthClientes' in opts ? opts.cardWidthClientes : 250;
    let cardWidthMesa = opts && 'cardWidthMesa' in opts ? opts.cardWidthMesa : 250;
    let titleFontSize = opts && 'titleFontSize' in opts ? opts.titleFontSize : 16;
    let valueFontSize = opts && 'valueFontSize' in opts ? opts.valueFontSize : 20;
    let logoPath = opts && 'logoPath' in opts ? opts.logoPath : "logo.png";
    let logoAppBarPath = opts && 'logoAppBarPath' in opts ? opts.logoAppBarPath : "logo.png";
    this[label$] = label;
    this[numberOfClients$] = numberOfClients;
    this[mostUsedTable$] = mostUsedTable;
    this[testsList$] = testsList;
    this[appBarColor$0] = appBarColor;
    this[cardHeight$] = cardHeight;
    this[cardWidthClientes$] = cardWidthClientes;
    this[cardWidthMesa$] = cardWidthMesa;
    this[titleFontSize$] = titleFontSize;
    this[valueFontSize$] = valueFontSize;
    this[logoPath$0] = logoPath;
    this[logoAppBarPath$0] = logoAppBarPath;
    analise_design.AnaliseDesign.__proto__.new.call(this, {key: key});
    ;
  }).prototype = analise_design.AnaliseDesign.prototype;
  dart.addTypeTests(analise_design.AnaliseDesign);
  dart.addTypeCaches(analise_design.AnaliseDesign);
  dart.setMethodSignature(analise_design.AnaliseDesign, () => ({
    __proto__: dart.getMethods(analise_design.AnaliseDesign.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(analise_design.AnaliseDesign, I[11]);
  dart.setFieldSignature(analise_design.AnaliseDesign, () => ({
    __proto__: dart.getFields(analise_design.AnaliseDesign.__proto__),
    label: dart.finalFieldType(core.String),
    numberOfClients: dart.finalFieldType(core.int),
    mostUsedTable: dart.finalFieldType(core.int),
    testsList: dart.finalFieldType(core.List$(core.String)),
    appBarColor: dart.finalFieldType(ui.Color),
    logoPath: dart.finalFieldType(core.String),
    logoAppBarPath: dart.finalFieldType(core.String),
    cardHeight: dart.finalFieldType(core.double),
    cardWidthClientes: dart.finalFieldType(core.double),
    cardWidthMesa: dart.finalFieldType(core.double),
    titleFontSize: dart.finalFieldType(core.double),
    valueFontSize: dart.finalFieldType(core.double)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/pages/login_page.dart": login_page,
    "package:flutter_app/design/login_design.dart": login_design,
    "package:flutter_app/pages/signup_page.dart": signup_page,
    "package:flutter_app/pages/main_page.dart": main_page,
    "package:flutter_app/design/signup_design.dart": signup_design,
    "package:flutter_app/pages/relatorio_page.dart": relatorio_page,
    "package:flutter_app/pages/home_page.dart": home_page,
    "package:flutter_app/pages/analise_page.dart": analise_page,
    "package:flutter_app/pages/perfil_page.dart": perfil_page,
    "package:flutter_app/design/home_design.dart": home_design,
    "package:flutter_app/design/analise_design.dart": analise_design
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/pages/login_page.dart","/zapp/project/lib/design/login_design.dart","/zapp/project/lib/pages/signup_page.dart","/zapp/project/lib/pages/main_page.dart","/zapp/project/lib/design/signup_design.dart","/zapp/project/lib/pages/relatorio_page.dart","/zapp/project/lib/pages/home_page.dart","/zapp/project/lib/pages/analise_page.dart","/zapp/project/lib/pages/perfil_page.dart","/zapp/project/lib/design/home_design.dart","/zapp/project/lib/design/analise_design.dart"],"names":[],"mappingsiCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;;;;;;UC5C4B;AACxB,YAAO,sDACuB,cACrB;IAGX;;;QATmB;AAAb,8CAAa,GAAG;;EAAE;;;;;;;;;AAJH,IAArB;EACF;;ECEwB;;;;;;UCAI;AACxB,YAAO;IACT;;;QALuB;AAAjB,wDAAiB,GAAG;;EAAE;;;;;;;;;;;;;;ACIO;IAAmB;;;QAH7B;AAAnB,4DAAmB,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY5B,UAAyB,AAAE,eAAvB,AAAS;AAIV,QAHS,+DACR,cACA,yCAA2B,QAAC;;IAGlC;UAG0B;AACxB,YAAO,kEAEC,6BACG,+DACE,wFAGO,0EAEiB,wCAAS,cAE/B,wBACA,uBACE,oCACsB,2CACY,0CAC7B,wBAER,6BACe,sBACX,0BACQ,UACI,2EAqBhB,mDACc,gEAED,QAAC;AACV,4BAAI,AAAM,KAAD,YAAY,AAAM,KAAD;AACxB,gCAAO;;AAET,8BAAO;mEAOX,mDACc,wCACC,8CAEF,QAAC;AACV,4BAAI,AAAM,KAAD,YAAY,AAAM,AAAO,KAAR,UAAU;AAClC,gCAAO;;AAET,8BAAO;mEAOX,+CACwB,2DACG,sBAAS,IAAI,IAAI,KAAK,yDAGpC,0DASZ,sCACsC,yCAC3B,yCASR,2CACa;AAMR,4BALS,uCACR,OAAO,EACP,yCACW,QAAC;;IAuBtC;;;;;;IA5IM,iBAAW;IACW,yBAAmB;IACnB,4BAAsB;;;EA2IpD;;;;;;;;;;;;;;;;;;;;;ACjJqC;IAAkB;;;QAH7B;AAAlB,0DAAkB,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;AAkB3B,UAAyB,AAAE,eAAvB,AAAS;AAIV,QAHS,+DACR,cACA,yCAA2B,QAAC;;IAGlC;yBAEmC;AACjC,UAAI,AAAM,KAAD,YAAY,AAAM,KAAD,YAAU,MAAO;AAC3C,UAAI,AAAM,AAAO,KAAR,UAAU,GAAG,MAAO;AAC7B,WAAK,AAAiB,gBAAV,kBAAmB,KAAK,GAAG,MAAO;AAC9C,WAAK,AAAgB,gBAAT,iBAAkB,KAAK,GAAG,MAAO;AAC7C,YAAO;IACT;sBAEgC;AAC9B,UAAI,AAAM,KAAD,YAAY,AAAM,KAAD,YAAU,MAAO;AAC3C,YAAO;IACT;6BAEuC;AACrC,UAAI,AAAM,KAAD,YAAY,AAAM,KAAD,YAAU,MAAO;AAC3C,UAAI,KAAK,KAAI,AAAiB,8BAAM,MAAO;AAC3C,YAAO;IACT;uBAEiC;AAC/B,UAAI,AAAM,KAAD,YAAY,AAAM,KAAD,YAAU,MAAO;AAC3C,UAAQ,AAAgB,kBAAP,KAAK,WAAW,MAAO;AACxC,YAAO;IACT;UAG0B;AACxB,YAAO,8CACI,iCACO,wCACC,iDACO,mDACJ,+CACD,6CACA,6CACA,6CACA,8CACT,6CACS,qDACH,yDACO,0DACN,qCAA8B;;IAEnD;;;;;;IA9DM,kBAAW;IACW,wBAAkB;IAClB,0BAAmB;IACnB,gCAA0B;IAC1B,6BAAsB;IACtB,2BAAqB;IACrB,2BAAqB;IACrB,2BAAqB;IACrB,2BAAqB;;;EAuDnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEmC;IAAgB;;;QAH3B;AAAhB,sDAAgB,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASC,qCAC1B,8BACA,oCACA,wCACA;IACD;oBAEsB;AAGnB,MAFF,cAAS;AACe,QAAtB,uBAAiB,KAAK;;IAE1B;UAG0B;AACxB,YAAO,kCACC,AAAM,oBAAC,4CACQ,iEACL,uCACP,4BACuB,8GAEF;IAqBlC;;;;;;IA7CI,uBAAiB;;;EA8CvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICtD6B;;;;;;IACC;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACT;;;;;;IACA;;;;;;IACc;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;;;;;;;;;;;;;;;;;oBAqBL;AAC1B,YAAO,yDAEE,kBAAK,KAAK;IAGrB;UAG0B;AACxB,YAAO,kEAEC,6BACG,+DACE,0FAGO,0EAEiB,wCAAS,0CAS/B,wBACA,qBACE,0CACkC,yCAC7B,wBAER,6BACS,oCACsB,iCACjB,yCAEF,sBACJ,0BACQ,UACI,kEAcpB,oBAAc,yBACd,mDACc,qEAKd,mDACc,8DAED,wCAGb,mDACc,qEAGD,+CAGb,mDACc,sCACC,8CAMF,2CAKb,oBAAc,2BACd,mDACc,wEAOd,oBAAc,yBACd,mDACc,mEAGgB,4CACjB,yCAGb,mDACc,mEAGgB,4CACjB,yCAGb,mDACc,mEAGgB,4CACjB,yCAKb,6CAES,mDACM,sBACW,yJAW1B,6BACS,iCACsB,iCACjB,yCASR,2CACW;AAMR,8BALS,uCACR,OAAO,EACP,yCACW,QAAC;;IAwBtC;;;QAvMQ;QACQ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACT;QACA;QACA;QACA;IAdS;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACT;IACA;IACA;IACA;AAhBD,8DACE,GAAG;;EAgBT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjCwB;AACxB,YAAO,oCACG;IAQZ;;;QAb2B;AAArB,gEAAqB,GAAG;;EAAE;;;;;;;;;;;;;;;;;UCIN;AACxB;IAMF;;;QAVsB;AAAhB,sDAAgB,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGD;AACxB,YAAO,sDACG,UACD,mCACG,mEAEK,4DAcF,wBACP,wDAEe,sBACX,qBACQ,2CAeV,mCACM,wBACR,+BACA,oBAAc,UAAU,KAAK,KAAK,wBAAC,SAAS,SAAS,YACrD,oBAAc,OAAO,KAAK,KAAK,wBAAC,SAAS,SAAS;IAK5D;;AAE0C;IAAmB;;AAExB,iCAAc,OAAO,IAAI,IAAI,wBAAC,SAAS,SAAS;IAAS;oBAGnF,OAAW,UAAc,MAAmB;AACrD,YAAO,8CACE,KAAK,mBACK,QAAQ,iBACV,IAAI,aACR,MAAM,YACP,iCACM;IAEpB;;;QApEyB;AAAnB,4DAAmB,GAAG;;EAAE;;;;;;;;;;;;;;;;UCEJ;AACxB,YAAO,oCACG;IAQZ;;;QAbwB;AAAlB,0DAAkB,GAAG;;EAAE;;;;;;;;;;;;;;ICAjB;;;;;;IACA;;;;;;IACC;;;;;;IACA;;;;;;;;;;;;;;UAWa;AACxB,YAAO,oCACG,mEAEW,2BACR,wBACP,wDAEe,sBACX,8BACQ,SACI,sCAKd,0DAEG,gCACK,wBAER,+BACS,oCACS,AAAI,wBAAC,qDASvB,0BACS,8CAEG,WACD,0DAEE,uCACkC,0CAC7B,wBACR,kBAAW,+BAAkB,WAAW,mFAclD,0BACS,8CAEG,WACD,0DAEE,uCACkC,0CAC7B,wBACR,kBAAW,0BAAa,WAAW;IAevD;;;QAvFQ;QACD;QACA;QACA;QACA;IAHA;IACA;IACA;IACA;AALD,0DACE,GAAG;;EAKT;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICXW;;;;;;IACH;;;;;;IACA;;;;;;IACS;;;;;;IACP;;;;;;IACC;;;;;;IACA;;;;;;IAEA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;;;;;;;;;;;;;;UAqBa;AACxB,YAAO,2DAEE,gCACK,wBAER,gCACU,YACD,oCACS,AAAI,wBAAC,qDAUvB,sCACuC,8CAC3B,wBAER,+BACS,gCACC,wBACD,0BACE,0DAEE,yCACgC,yCAC3B,wBACR,kBACE,0BACO,wCACK,gBACa,wBAG3B,kBACE,AAAgB,2CACT,wCACK,kCAUxB,+BACS,4BACC,wBACD,0BACE,0DAEE,yCACgC,yCAC3B,wBACR,kBACE,2BACO,wCACK,gCACa,wBAG3B,kBACE,AAAc,yCACP,wCACK,uDAc5B,+BACkB,6CACH,AAAU,sCACR,SAAC,SAAS,UACd,6CACE,kBAAK,AAAS,sBAAC,KAAK,2CAEjB,wBACR,0DAES,kBACL,AAAyE,yDAAlB,AAAS,sBAAC,KAAK;IAY5F;;;QA5HQ;QACQ;QACA;QACA;QACA;QACT;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAXS;IACA;IACA;IACA;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAbD,gEACE,GAAG;;EAaT","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    pages__login_page: login_page,
    design__login_design: login_design,
    pages__signup_page: signup_page,
    pages__main_page: main_page,
    design__signup_design: signup_design,
    pages__relatorio_page: relatorio_page,
    pages__home_page: home_page,
    pages__analise_page: analise_page,
    pages__perfil_page: perfil_page,
    design__home_design: home_design,
    design__analise_design: analise_design
  };
}));

//# sourceMappingURL=main.js.map
